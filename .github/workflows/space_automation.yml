name: Space Facts Video Automation

on:
  schedule:
    # Run every day at 9:00 PM IST (3:30 PM UTC)
    - cron: '30 15 * * *'
  
  # Allow manual triggering from GitHub UI
  workflow_dispatch:

jobs:
  generate-space-video:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      contents: write
      
    steps:
    # Step 1: Checkout the repository code
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    
    # Step 2: Download all media files from the GitHub Release with proper error handling
    - name: 📥 Download Media Assets from Release
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
      run: |
        echo "Creating media directories..."
        mkdir -p space_temp
        mkdir -p space_music

        # Function to download with error checking
        download_file() {
          local url="$1"
          local output="$2"
          echo "Downloading: $output"
          
          if curl -L --fail -H "Authorization: Bearer $GITHUB_TOKEN" -o "$output" "$url"; then
            echo "✅ Successfully downloaded $output"
          else
            echo "❌ Failed to download $output"
            exit 1
          fi
        }

        echo "Downloading video templates..."
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/Asteroids.mp4" "space_temp/Asteroids.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/blackholes.mp4" "space_temp/blackholes.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/solar_system.mp4" "space_temp/solar_system.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_blackholes.mp4" "space_temp/space_blackholes.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_earth.mp4" "space_temp/space_earth.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_moon.mp4" "space_temp/space_moon.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_multisky.mp4" "space_temp/space_multisky.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_nebula.mp4" "space_temp/space_nebula.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_newearth.mp4" "space_temp/space_newearth.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_planetx_to_earth.mp4" "space_temp/space_planetx_to_earth.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_polkadots.mp4" "space_temp/space_polkadots.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_purp_asteroids.mp4" "space_temp/space_purp_asteroids.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_red_planet.mp4" "space_temp/space_red_planet.mp4"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/space_star.mp4" "space_temp/space_star.mp4"

        echo "Downloading music files..."
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/best.15.second.in.interstellar.mp3" "space_music/best.15.second.in.interstellar.mp3"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/East.West_space.mp3" "space_music/East.West_space.mp3"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/Interstellar.Mood_space.mp3" "space_music/Interstellar.Mood_space.mp3"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/Seventh.Heaven_space.mp3" "space_music/Seventh.Heaven_space.mp3"
        download_file "https://github.com/Abhi-9479/space-video-automation/releases/download/v1.0-assets/Y2K.Heist.-.Rod.Kim.mp3" "space_music/Y2K.Heist.-.Rod.Kim.mp3"

    # Step 3: Set up Python
    - name: 🐍 Set up Python 3.12.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.10'
    
    # Step 4: Install system dependencies
    - name: 📦 Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y imagemagick ffmpeg libjpeg-dev zlib1g-dev
        sudo sed -i 's/rights="none"/rights="read,write"/g' /etc/ImageMagick-6/policy.xml
    
    # Step 5: Install Python dependencies
    - name: 🔧 Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
    
    # Step 6: Create credential and environment files
    - name: 🔐 Create credentials files from secrets
      run: |
        echo '${{ secrets.GOOGLE_CREDENTIALS }}' > credentials.json
        echo '${{ secrets.CLIENT_SECRETS }}' > client_secrets.json
        echo '${{ secrets.TOKEN_PICKLE_BASE64 }}' | base64 -d > token.pickle
    - name: 🌍 Create environment file
      run: |
        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" > .env
    
    # Step 7: Run your main Python script
    - name: 🚀 Generate and upload space video
      run: |
        python space_git.py
      env:
        GITHUB_ACTIONS: true
        PYTHONPATH: ${{ github.workspace }}

    # Step 8: Commit the updated index file back to the repository
    - name: 💾 Commit and push last video index
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add space_temp/last_video_index.txt
        git diff-index --quiet HEAD || git commit -m "Update last used video index"
        git push
        
    # Step 9: Save the final video as a temporary artifact
    - name: 💾 Save generated video as artifact (optional backup)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: space-video-${{ github.run_number }}
        path: "quote_*.mp4"
        retention-days: 7
    
    # Step 10: Notify on failure
    - name: 📧 Notify on failure
      if: failure()
      run: |
        echo "❌ Space video automation failed!"
        echo "Check the logs above for details."
